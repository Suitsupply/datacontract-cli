{# filepath: looker_base_view_lkml.jinja #}
{# This template generates Looker LookML view file based on data contract specifications #}

{%- macro clean_description(description) -%}
  {{ description|default('')|trim|replace('"', "'") }}
{%- endmacro -%}

{%- macro dimension_timeframes(field_type) -%}
  {%- set timeframes = ["raw", "date", "time", "minute30", "week", "month", "quarter", "year"] -%}
  {%- set time_groups = ["time", "time_of_day", "hour", "hour_of_day", "minute", "second", "millisecond", "microsecond"] -%}
  
  {%- if field_type == "DATE" -%}
    {%- for frame in timeframes -%}
      {%- set skip = false -%}
      {%- for time_group in time_groups -%}
        {%- if frame.startswith(time_group) -%}
          {%- set skip = true -%}
        {%- endif -%}
      {%- endfor -%}
      {%- if not skip -%}
        "{{ frame }}"{% if not loop.last %}, {% endif %}
      {%- endif -%}
    {%- endfor -%}
  {%- else -%}
    {%- for frame in timeframes -%}
      "{{ frame }}"{% if not loop.last %}, {% endif %}
    {%- endfor -%}
  {%- endif -%}
{%- endmacro -%}

{%- macro strip_time_suffix(field_name) -%}
  {%- set time_suffixes = ["_at", "_date", "_time", "_ts", "_timestamp", "_datetime"] -%}
  {%- set stripped_name = field_name -%}
  
  {%- for suffix in time_suffixes -%}
    {%- if field_name.endswith(suffix) -%}
      {%- set name_parts = field_name.split('_') -%}
      {%- set stripped_name = name_parts[:-1]|join('_') -%}
      {%- break -%}
    {%- endif -%}
  {%- endfor -%}
  
  {{ stripped_name }}
{%- endmacro -%}

{%- macro get_field_type_mapping(field_type) -%}
  {%- set mapping = {
    "INTEGER": "number",
    "INT64": "number",
    "FLOAT": "number",
    "FLOAT64": "number",
    "BIGNUMERIC": "number",
    "NUMERIC": "number",
    "BOOLEAN": "yesno",
    "BOOL": "yesno",
    "TIMESTAMP": "time",
    "TIME": "string",
    "DATE": "time",
    "DATETIME": "time",
    "STRING": "string",
    "ARRAY": "string",
    "GEOGRAPHY": "string",
    "BYTES": "string"
  } -%}
  
  {{ mapping.get(field_type, "string") }}
{%- endmacro -%}

{%- macro get_type_transform(field_type) -%}
  {%- if field_type == "TIME" -%}
    {%- set transform = ["cast(", " as string)"] -%}
  {%- else -%}
    {%- set transform = ["", ""] -%}
  {%- endif -%}
  
  {{ transform }}
{%- endmacro -%}

view: {{ contract.entity_label }} {
  sql_table_name: `{{ contract.project }}.{{ override_dataset_id if override_dataset_id else contract.dataset }}.{{ contract.entity_label }}` ;;
  
  {# Generate regular dimensions #}
  {%- for field in contract.column_data %}
    {%- set field_type = field.field_type %}
    {%- set lookml_type = get_field_type_mapping(field_type) %}
    {%- set type_transform = get_type_transform(field_type) %}
    {%- set field_sql_name = field.field_alias %}
    {%- set field_description = clean_description(field.field_description) %}
    
    {%- if lookml_type != "time" %}
  dimension: {{ field.field_alias }} {
      {%- if field.field_meta.get('hidden', false) %}
    hidden: yes
      {%- endif %}
      
      {%- if field.field_meta.get('primary_key', false) %}
    primary_key: yes
      {%- endif %}
      
      {%- if field.field_meta.get('group_label') %}
    group_label: "{{ field.field_meta.get('group_label') }}"
      {%- endif %}
      
      {%- if field_description %}
    description: "{{ field_description }}"
      {%- endif %}
    
    type: {{ lookml_type }}
    sql: {{ type_transform[0] }}${TABLE}.{{ field_sql_name }}{{ type_transform[1] }} ;;
  }
    {%- else %}
  dimension_group: {{ strip_time_suffix(field.field_alias) }} {
      {%- if field.field_meta.get('hidden', false) %}
    hidden: yes
      {%- endif %}
      
      {%- if field.field_meta.get('group_label') %}
    group_label: "{{ field.field_meta.get('group_label') }}"
      {%- endif %}
      
      {%- if field_description %}
    description: "{{ field_description }}"
      {%- endif %}
    
    type: time
    timeframes: [{{ dimension_timeframes(field_type) }}]
      
      {%- if field_type == "DATE" %}
    convert_tz: no
    datatype: date
      {%- elif field_type == "DATETIME" %}
    datatype: datetime
      {%- endif %}
    
    sql: {{ type_transform[0] }}${TABLE}.{{ field_sql_name }}{{ type_transform[1] }} ;;
  }
    {%- endif %}
  {%- endfor %}
}
